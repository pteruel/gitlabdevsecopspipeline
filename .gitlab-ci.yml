default:
  before_script:
    #running this becasue the spring template added mvnw as not executable and the sast tool has an exception when trying to run maven.
    - chmod +x mvnw || true
    
# DAST needs dast stage so extend the defaults
stages:
  - build
  - test
  - deploy
  - dast 

include:
- template: Security/Dependency-Scanning.gitlab-ci.yml
- template: Security/License-Scanning.gitlab-ci.yml
- template: Security/SAST.gitlab-ci.yml
- template: Security/Container-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Security/DAST.gitlab-ci.yml

variables:
  # name of the image for docker
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  # settings for container scanning jobcontainer_scanning:
  DOCKER_IMAGE: $CONTAINER_TEST_IMAGE
  # DAST settings
  DAST_WEBSITE: http://demoApp:8080/
  # do a full scan
  DAST_FULL_SCAN_ENABLED: "true"

# build the application 
build_job:
  image: maven:3-openjdk-17
  stage: build
  script: "mvn clean package -B -Dmaven.test.skip"
  artifacts:
    paths:
      - target/*.jar

# execute regular junit tests
test_job:
  image: maven:3-openjdk-17
  stage: test
  script: "mvn test"
  artifacts:
    paths:
      - "**/target/" 
    reports:
      junit: 
       - "**/target/*-reports/TEST-*.xml"

# build container image
build_image:
  services:
  - name: docker:dind
    alias: dind
  image: docker:20.10.16
  stage: build
  script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:latest || true
    - docker build --tag $CONTAINER_TEST_IMAGE --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CONTAINER_TEST_IMAGE
    - docker push $CI_REGISTRY_IMAGE:latest
  needs: [build_job]

secret_detection:
  variables:
    SECRET_DETECTION_HISTORIC_SCAN: "true"

dast:
  services: # use services to link your app container to the dast job
    - name: $CONTAINER_TEST_IMAGE
      alias: demoApp

